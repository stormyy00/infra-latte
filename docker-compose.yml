version: "3.8"

services:
  monitor:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PORT: "3000"
      TARGET_URL: "${TARGET_URL}"
      VERCEL_TOKEN: "${VERCEL_TOKEN}"
      VERCEL_PROJECT: "${VERCEL_PROJECT}"
    ports: ["3000:3000"]
    volumes:
      - ./src:/app/src:rw
      - /app/node_modules
    # healthcheck optional in dev; leave off or keep relaxed:
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -fsS http://localhost:3000/metrics > /dev/null || exit 1",
        ]
      interval: 60s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-lifecycle
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports: ["9090:9090"]
    depends_on:
      monitor:
        condition: service_started

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "${GRAFANA_ADMIN_PASSWORD:-admin}"
    volumes:
      - grafana-data:/var/lib/grafana
    ports: ["3001:3000"]
    depends_on: [prometheus]

volumes:
  grafana-data:
